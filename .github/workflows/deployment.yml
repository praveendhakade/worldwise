name: Deploy Project
on:  
  push:
    branches:
      - master
jobs:
  lint:
      runs-on: windows-latest
      steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Setup NodeJs
        uses:  actions/setup-node@v4
        with:
          node-version: 18
        run: npm install
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependecies
        run: npm ci
      - name: Linting
        run : npm run lint
  test:
    needs: lint
    runs-on: windows-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      # - name: Setup NodeJs
      #   uses:  actions/setup-node@v4
      #   with:
      #     node-version: 18
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependecies
        run: npm ci
      - name: Runt tests
        run : npm test
  build:
    needs: test
    runs-on: windows-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      # - name: Setup NodeJs
      #   uses:  actions/setup-node@v4
      #   with:
      #     node-version: 18
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependecies
        run: npm ci
      - name: Build Project
        run : npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >>  $GITHUB_OUTPUT ';'
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
          # path: |
          #   dist
          #   package.json
  deploy:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Get Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying...."
